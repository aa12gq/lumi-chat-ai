{"version":3,"file":"preload.js","sources":["../electron/preload.ts"],"sourcesContent":["const { contextBridge, ipcRenderer } = require('electron');\n\n// 暴露安全的 API 到渲染进程\ncontextBridge.exposeInMainWorld('electronAPI', {\n  // 示例：发送消息到主进程\n  sendMessage: (message: string) => ipcRenderer.send('message', message),\n  \n  // 示例：从主进程接收消息\n  onMessage: (callback: (message: string) => void) => {\n    ipcRenderer.on('message', (_event, message) => callback(message));\n  },\n  \n  // 获取版本信息\n  getVersions: () => ({\n    node: process.versions.node,\n    chrome: process.versions.chrome,\n    electron: process.versions.electron,\n  }),\n});\n\n// 预加载脚本\nwindow.addEventListener('DOMContentLoaded', () => {\n  const replaceText = (selector: string, text: string) => {\n    const element = document.getElementById(selector)\n    if (element) element.innerText = text\n  }\n\n  for (const type of ['chrome', 'node', 'electron']) {\n    replaceText(`${type}-version`, process.versions[type] || '')\n  }\n}); "],"names":[],"mappings":";AAAA,MAAM,EAAE,eAAe,gBAAgB,QAAQ,UAAU;AAGzD,cAAc,kBAAkB,eAAe;AAAA;AAAA,EAE7C,aAAa,CAAC,YAAoB,YAAY,KAAK,WAAW,OAAO;AAAA;AAAA,EAGrE,WAAW,CAAC,aAAwC;AAClD,gBAAY,GAAG,WAAW,CAAC,QAAQ,YAAY,SAAS,OAAO,CAAC;AAAA,EAClE;AAAA;AAAA,EAGA,aAAa,OAAO;AAAA,IAClB,MAAM,QAAQ,SAAS;AAAA,IACvB,QAAQ,QAAQ,SAAS;AAAA,IACzB,UAAU,QAAQ,SAAS;AAAA,EAC7B;AACF,CAAC;AAGD,OAAO,iBAAiB,oBAAoB,MAAM;AAC1C,QAAA,cAAc,CAAC,UAAkB,SAAiB;AAChD,UAAA,UAAU,SAAS,eAAe,QAAQ;AAC5C,QAAA,iBAAiB,YAAY;AAAA,EACnC;AAEA,aAAW,QAAQ,CAAC,UAAU,QAAQ,UAAU,GAAG;AACjD,gBAAY,GAAG,IAAI,YAAY,QAAQ,SAAS,IAAI,KAAK,EAAE;AAAA,EAAA;AAE/D,CAAC;"}